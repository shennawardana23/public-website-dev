import{_ as e,c as n,a0 as t,o as i}from"./chunks/framework.CGHvQLJz.js";const k=JSON.parse('{"title":"Panduan untuk End to End (E2E) Automation Test Developer","description":"","frontmatter":{},"headers":[],"relativePath":"id/guide/e2e-automate-test.md","filePath":"id/guide/e2e-automate-test.md"}'),r={name:"id/guide/e2e-automate-test.md"};function s(o,a,u,l,m,p){return i(),n("div",null,a[0]||(a[0]=[t('<h1 id="panduan-untuk-end-to-end-e2e-automation-test-developer" tabindex="-1"><img src="https://emojis.slackmojis.com/emojis/images/1588315024/8823/hyperkitty.gif?1588315024" width="30"> Panduan untuk End to End (E2E) Automation Test Developer <a class="header-anchor" href="#panduan-untuk-end-to-end-e2e-automation-test-developer" aria-label="Permalink to &quot;&lt;img src=&quot;https://emojis.slackmojis.com/emojis/images/1588315024/8823/hyperkitty.gif?1588315024&quot; width=&quot;30&quot; /&gt; Panduan untuk End to End (E2E) Automation Test Developer&quot;">â€‹</a></h1><p><a href="./en-README.html">Back to Home</a></p><p>Bagian ini berisi mengenai panduan untuk membuat kode, menggunakan <em>third-party tools</em>, penjelasan alur atau arsitektur dan pustaka yang ada dan/atau digunakan dalam membuat <em>end to end automation test</em> di Arch Public Website Dev.</p><hr><hr><h2 id="e2e-automation-test-standar-alur-dan-arsitektur-untuk-pembuatan-e2e-automation-test" tabindex="-1">E2E Automation Test : Standar alur dan arsitektur untuk pembuatan <em>e2e automation test</em> <a class="header-anchor" href="#e2e-automation-test-standar-alur-dan-arsitektur-untuk-pembuatan-e2e-automation-test" aria-label="Permalink to &quot;E2E Automation Test : Standar alur dan arsitektur untuk pembuatan *e2e automation test*&quot;">â€‹</a></h2><p><em>End to end (e2e) testing</em> merupakan teknik pengujian untuk memastikan bahwa sistem telah berjalan sesuai alur yang telah ditentukan mulai dari awal sampai akhir di Arch Public Website Dev. <em>E2E testing</em> memiliki empat alur utama yang dibagi dalam perencanaan, perancangan, pelaksanaan, dan analisis hasil.</p><p><img src="https://i.imgur.com/98gApwl.png" alt=""></p><h3 id="perencanaan" tabindex="-1">Perencanaan <a class="header-anchor" href="#perencanaan" aria-label="Permalink to &quot;Perencanaan&quot;">â€‹</a></h3><p>Perencanaan merupakan tahap alur untuk menentukan dan membagi tugas, jadwal, dan sumber daya yang akan digunakan untuk melakukan pengujian pada sistem/modul/fitur/pembaruan/perbaikan yang akan dikerjakan.</p><p><strong>Input</strong>: Dokumen PRD,SRS, dan bentuk dokumentasi lainnya yang bisa menjelaskan sistem/modul/fitur/pembaruan/perbaikan yang akan dikerjakan.</p><p><strong>Output</strong>: <strong>Story/Bug Card Ora</strong> (<em>Description, figma, &amp; acceptance criteria included</em>)</p><h3 id="perancangan" tabindex="-1">Perancangan <a class="header-anchor" href="#perancangan" aria-label="Permalink to &quot;Perancangan&quot;">â€‹</a></h3><p>Perancangan merupakan tahap alur untuk menentukan spesifikasi pengujian, pembuatan kasus uji (<em>test case</em>), analisis risiko, analisis penggunaan, dan penjadwalan pengujian dari tiap story/bug card Ora yang telah ditentukan.</p><p><strong>Input</strong>: <strong>Story/Bug Card Ora</strong> (<em>Description, figma, &amp; acceptance criteria included</em>)</p><p><strong>Output</strong>: <strong>Test Plan</strong> (<em>test cases included</em>)</p><h3 id="pelaksanaan" tabindex="-1">Pelaksanaan <a class="header-anchor" href="#pelaksanaan" aria-label="Permalink to &quot;Pelaksanaan&quot;">â€‹</a></h3><p>Pelaksanaan merupakan tahap alur untuk mengeksekusi <em>test cases</em> yang telah dirancang dan direncanakan pada <em>test plan</em>, melakukan demo dan mendokumentasikan hasilnya.</p><p><strong>Input</strong>: <strong>Test Plan</strong> (<em>test cases included</em>)</p><p><strong>Output</strong>: <strong>Test Plan Progress Report</strong> dan demo feedback list</p><h3 id="analisis-hasil" tabindex="-1">Analisis Hasil <a class="header-anchor" href="#analisis-hasil" aria-label="Permalink to &quot;Analisis Hasil&quot;">â€‹</a></h3><p>Analisis hasil merupakan tahap alur untuk menganalisis hasil pengujian, mengevaluasi pengujian, melakukan pengujian tambahan jika diperlukan, merilis <em>release notes</em> dan merapikan dokumen <em>test plan</em> untuk (iterasi) pengembangan atau pemeliharaan selanjutnya.</p><p><strong>Input</strong>: <strong>Test Plan Progress Report</strong> dan demo feedback list</p><p><strong>Output</strong>: <strong>Release Notes</strong> dan <em>evaluation report</em></p><hr><p>Penerapan <em>e2e testing</em> secara teknik menerapkan pendekatan <em>functional</em> dan <em>non functional</em>. Setiap pendekatan memiliki daftar teknik/pengujian yang disarankan dan bisa digunakan untuk memenuhi kebutuhan layanan.</p><h3 id="functional" tabindex="-1">Functional <a class="header-anchor" href="#functional" aria-label="Permalink to &quot;Functional&quot;">â€‹</a></h3><p>Daftar teknik/pengujian:</p><ul><li>Unit testing</li><li>Integration testing</li><li>Smoke testing</li><li>Sanity testing</li><li>Regression testing</li><li>Exploratory testing</li><li>User acceptance testing</li></ul><h3 id="non-functional" tabindex="-1">Non Functional <a class="header-anchor" href="#non-functional" aria-label="Permalink to &quot;Non Functional&quot;">â€‹</a></h3><p>Daftar teknik/pengujian:</p><ul><li>Load testing</li><li>Performance testing</li><li>Stress testing</li><li>Security testing</li><li>Accessibility testing</li></ul><p>Untuk mendapatkan <em>test coverage</em> maksimal disarankan untuk menerapkan semua daftar teknik diatas di setiap (iterasi) pengembangan lol ðŸ˜„.</p><hr><p>Penerapan <em>e2e testing</em> secara eksekusi menerapkan pendekatan <em>manual</em> dan <em>automation</em> secara berurutan. Sebelum menerapkan pendekatan <em>automation</em> diharapkan untuk pengembang memastikan bahwa setiap komponen yang ada dalam pendekatan <em>manual</em> telah diterapkan, dilengkapi, atau disepakati.</p><h3 id="manual" tabindex="-1">Manual <a class="header-anchor" href="#manual" aria-label="Permalink to &quot;Manual&quot;">â€‹</a></h3><p>Komponen pendekatan <em>manual</em> yang perlu diterapkan dan dipastikan telah ada atau disepakati:</p><ul><li>Test Driven Development/Test Planning</li><li>Test Cases and Scenarios</li><li>Reporting</li><li>Compatibility</li><li>Verification and Validation</li></ul><h3 id="automation" tabindex="-1">Automation <a class="header-anchor" href="#automation" aria-label="Permalink to &quot;Automation&quot;">â€‹</a></h3><p>Komponen pendekatan <em>automation</em> yang perlu diterapkan:</p><ul><li>Backend Automation</li><li>Frontend Automation</li><li>Mobile Automation (jika dibutuhkan)</li></ul><p>Setiap <em>platform</em> pada Arch Public Website memiliki kebutuhan dan basis sistem/<em>tools</em> yang bisa jadi berbeda sehingga secara standar penerapan <em>e2e testing</em> akan lebih dirincikan pada panduan yang telah dibagi berdasarkan <em>platform</em> nya.</p><hr><hr><h2 id="e2e-at-tools-daftar-tools-yang-digunakan-untuk-pengembangan" tabindex="-1">E2E AT Tools : Daftar <em>tools</em> yang digunakan untuk pengembangan <a class="header-anchor" href="#e2e-at-tools-daftar-tools-yang-digunakan-untuk-pengembangan" aria-label="Permalink to &quot;E2E AT Tools : Daftar *tools* yang digunakan untuk pengembangan&quot;">â€‹</a></h2><ul><li><em><a href="https://cypress.io/" target="_blank" rel="noreferrer">Cypress</a></em> (Backend/Frontend Automation)</li><li><em><a href="https://monika.hyperjump.tech/" target="_blank" rel="noreferrer">Monika</a></em> (Monitoring/Trigger)</li><li><em><a href="https://betterstack.com/better-uptime" target="_blank" rel="noreferrer">BetterUptime</a></em> (Monitoring)</li><li><em><a href="https://testproject.io/" target="_blank" rel="noreferrer">TestProjectIO</a></em> (E2E Automation)</li></ul><hr><hr>',48)]))}const g=e(r,[["render",s]]);export{k as __pageData,g as default};
